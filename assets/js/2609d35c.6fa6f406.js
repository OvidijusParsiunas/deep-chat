"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1285],{11470:(e,n,s)=>{s.d(n,{A:()=>v});var r=s(96540),i=s(34164),a=s(23104),t=s(56347),l=s(205),o=s(57485),c=s(31682),d=s(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r})))}(s);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function x({value:e,tabValues:n}){return n.some((n=>n.value===e))}function p({queryString:e=!1,groupId:n}){const s=(0,t.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function g(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,a=u(e),[t,o]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[c,h]=p({queryString:s,groupId:i}),[g,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,i]=(0,d.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:i}),j=(()=>{const e=c??g;return x({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{j&&o(j)}),[j]);return{selectedValue:t,selectValue:(0,r.useCallback)((e=>{if(!x({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),m(e)}),[h,m,a]),tabValues:a}}var m=s(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=s(74848);function f({className:e,block:n,selectedValue:s,selectValue:r,tabValues:t}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),c=e=>{const n=e.currentTarget,i=l.indexOf(n),a=t[i].value;a!==s&&(o(n),r(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:t.map((({value:e,label:n,attributes:r})=>(0,b.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...r,className:(0,i.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:s}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function k(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function v(e){const n=(0,m.A)();return(0,b.jsx)(k,{...e,children:h(e.children)},String(n))}},15781:(e,n,s)=>{s.d(n,{A:()=>i});s(96540);var r=s(74848);function i(){return(0,r.jsx)("div",{style:{height:"1px"}})}},19365:(e,n,s)=>{s.d(n,{A:()=>t});s(96540);var r=s(34164);const i={tabItem:"tabItem_Ymn6"};var a=s(74848);function t({children:e,hidden:n,className:s}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,s),hidden:n,children:e})}},24033:(e,n,s)=>{s.d(n,{A:()=>a,q:()=>i});s(96540);var r=s(74848);function i(e){return e?.children[0]?.children[0]}function a({children:e,minHeight:n,innerDisplay:s}){return(0,r.jsx)("div",{className:"documentation-example-container",style:{minHeight:`${n||400}px`},children:(0,r.jsx)("div",{style:{display:s||"block"},children:e})})}},26813:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/huggingFaceLogo-fc1ff0c8a51b1066702d41f83250bd9d.png"},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(96540);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}},50363:(e,n,s)=>{s.d(n,{A:()=>a});var r=s(78478),i=(s(96540),s(74848));function a(e){return(0,i.jsx)(r.A,{children:()=>{const n=s(78152).DeepChat;return(0,i.jsx)(n,{...e,children:e.children})}})}},57877:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>m,contentTitle:()=>g,default:()=>f,frontMatter:()=>p,metadata:()=>r,toc:()=>j});const r=JSON.parse('{"id":"docs/directConnection/HuggingFace","title":"HuggingFace","description":"Properties used to connect to Hugging Face API.","source":"@site/docs/docs/directConnection/HuggingFace.mdx","sourceDirName":"docs/directConnection","slug":"/docs/directConnection/HuggingFace","permalink":"/docs/directConnection/HuggingFace","draft":false,"unlisted":false,"editUrl":"https://github.com/OvidijusParsiunas/deep-chat/tree/main/website/docs/docs/directConnection/HuggingFace.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"docs","previous":{"title":"Groq","permalink":"/docs/directConnection/Groq"},"next":{"title":"Kimi","permalink":"/docs/directConnection/Kimi"}}');var i=s(74848),a=s(28453),t=s(26813),l=s(82496),o=s(24033),c=s(50363),d=s(15781),h=s(78478),u=s(19365),x=s(11470);const p={sidebar_position:10},g="HuggingFace",m={},j=[{value:"<code>huggingFace</code>",id:"huggingFace",level:3},{value:"Service Types",id:"service-types",level:2},{value:"<code>Conversation</code>",id:"Conversation",level:3},{value:"Example",id:"example",level:4},{value:"<code>TextGeneration</code>",id:"TextGeneration",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>Summarization</code>",id:"Summarization",level:3},{value:"Example",id:"example-2",level:4},{value:"<code>Translation</code>",id:"Translation",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>FillMask</code>",id:"FillMask",level:3},{value:"Example",id:"example-4",level:4},{value:"<code>QuestionAnswer</code>",id:"QuestionAnswer",level:3},{value:"Example (Ask about labrador looks)",id:"example-ask-about-labrador-looks",level:4},{value:"<code>AudioSpeechRecognition</code>",id:"AudioSpeechRecognition",level:3},{value:"Example",id:"example-5",level:4},{value:"<code>AudioClassification</code>",id:"AudioClassification",level:3},{value:"Example",id:"example-6",level:4},{value:"<code>ImageClassification</code>",id:"ImageClassification",level:3},{value:"Example",id:"example-7",level:4}];function b(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"huggingface",children:"HuggingFace"})}),"\n","\n",(0,i.jsxs)(n.h1,{id:"hugging-face",children:[(0,i.jsx)("img",{src:t.A,width:"60",style:{float:"left",marginRight:"5px"}}),(0,i.jsx)("span",{className:"direct-service-title",children:"Hugging Face"})]}),"\n",(0,i.jsxs)(n.p,{children:["Properties used to connect to ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/index",children:"Hugging Face API"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"huggingFace",children:(0,i.jsx)(n.code,{children:"huggingFace"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Type: { ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#Conversation",children:(0,i.jsx)(n.code,{children:"conversation?: Conversation"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#TextGeneration",children:(0,i.jsx)(n.code,{children:"textGeneration?: TextGeneration"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#Summarization",children:(0,i.jsx)(n.code,{children:"summarization?: Summarization"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#Translation",children:(0,i.jsx)(n.code,{children:"translation?: Translation"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#FillMask",children:(0,i.jsx)(n.code,{children:"fillMask?: FillMask"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#QuestionAnswer",children:(0,i.jsx)(n.code,{children:"questionAnswer?: QuestionAnswer"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#AudioSpeechRecognition",children:(0,i.jsx)(n.code,{children:"audioSpeechRecognition?: AudioSpeechRecognition"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#AudioClassification",children:(0,i.jsx)(n.code,{children:"audioClassification?: AudioClassification"})}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.a,{href:"#ImageClassification",children:(0,i.jsx)(n.code,{children:"imageClassification?: ImageClassification"})})," ",(0,i.jsx)("br",{}),"\n}"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Default: ",(0,i.jsx)(n.em,{children:"{conversation: true}"})]}),"\n"]}),"\n"]}),"\n","\n",(0,i.jsx)(h.A,{children:()=>s(61886).readdAutoNavShadowToggle()}),"\n",(0,i.jsx)(n.h2,{id:"service-types",children:"Service Types"}),"\n",(0,i.jsx)(n.h3,{id:"Conversation",children:(0,i.jsx)(n.code,{children:"Conversation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"model?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"parameters?:"})," { ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"min_length?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"max_length?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"top_k?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"top_p?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"temperature?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"repetition_penalty?: string"}),"}, ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"options?:"})," {",(0,i.jsx)(n.code,{children:"use_cache?: boolean"}),"} ",(0,i.jsx)("br",{}),"\n}"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "facebook/blenderbot-400M-distill", options: {use_cache: true}}'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#conversational-task",children:(0,i.jsx)(n.code,{children:"Conversational"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"min_length"})," is the minimum length in tokens of the output summary. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"max_length"})," is the maximum length in tokens of the output summary. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"top_k"})," defines the top tokens considered within the sample operation to create new text. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"top_p"})," is a float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top * p. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"temperature"})," is a float (ranging from ",(0,i.jsx)(n.em,{children:"0.0"})," to ",(0,i.jsx)(n.em,{children:"100.0"}),") temperature of the sampling operation. 1 means regular sampling, ",(0,i.jsx)(n.em,{children:"0"})," means always take the highest score, ",(0,i.jsx)(n.em,{children:"100.0"})," is getting closer to uniform probability. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"repetition_penalty"})," is a float (ranging from ",(0,i.jsx)(n.em,{children:"0.0"})," to ",(0,i.jsx)(n.em,{children:"100.0"}),") that controls where a token is used more within generation the more it is penalized to not be picked in successive generation passes. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"use_cache"})," is used to speed up requests by using the inference API cache."]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",conversation:{model:"facebook/blenderbot-400M-distill",parameters:{temperature:1}}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{conversation:{model:"facebook/blenderbot-400M-distill",parameters:{temperature:1}}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "conversation": {"model": "facebook/blenderbot-400M-distill", "parameters": {"temperature": 1}}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "conversation": {"model": "facebook/blenderbot-400M-distill", "parameters": {"temperature": 1}}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"TextGeneration",children:(0,i.jsx)(n.code,{children:"TextGeneration"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"model?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"parameters?:"})," { ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"top_k?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"top_p?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"temperature?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"repetition_penalty?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"max_new_tokens?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"do_sample?: boolean"}),"}, ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"options?:"})," {",(0,i.jsx)(n.code,{children:"use_cache?: boolean"}),"} ",(0,i.jsx)("br",{}),"\n}"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "gpt2", options: {use_cache: true}}'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#text-generation-task",children:(0,i.jsx)(n.code,{children:"Text Generation"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"top_k"})," defines the top tokens considered within the sample operation to create new text. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"top_p"})," is a float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top * p. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"temperature"})," is a float (ranging from ",(0,i.jsx)(n.em,{children:"0.0"})," to ",(0,i.jsx)(n.em,{children:"100.0"}),") temperature of the sampling operation. 1 means regular sampling, ",(0,i.jsx)(n.em,{children:"0"})," means always take the highest score, ",(0,i.jsx)(n.em,{children:"100.0"})," is getting closer to uniform probability. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"repetition_penalty"})," is a float (ranging from ",(0,i.jsx)(n.em,{children:"0.0"})," to ",(0,i.jsx)(n.em,{children:"100.0"}),") that controls where a token is used more within generation the more it is penalized to not be picked in successive generation passes. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"max_new_tokens"})," is an integer (ranging from ",(0,i.jsx)(n.em,{children:"0"})," to ",(0,i.jsx)(n.em,{children:"250"}),") amount of new tokens to be generated by the response. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"do_sample"})," controls whether or not to use sampling. If ",(0,i.jsx)(n.code,{children:"false"})," it uses greedy decoding sampling. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"use_cache"})," is used to speed up requests by using the inference API cache."]}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",textGeneration:{model:"gpt2",parameters:{temperature:1}}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{textGeneration:{model:"gpt2",parameters:{temperature:1}}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "textGeneration": {"model": "gpt2", "parameters": {"temperature": 1}}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "textGeneration": {"model": "gpt2", "parameters": {"temperature": 1}}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"Summarization",children:(0,i.jsx)(n.code,{children:"Summarization"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"model?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"parameters?:"})," { ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"min_length?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"max_length?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"top_k?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"top_p?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"temperature?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"repetition_penalty?: string"}),"}, ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"options?:"})," {",(0,i.jsx)(n.code,{children:"use_cache?: boolean"}),"} ",(0,i.jsx)("br",{}),"\n}"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "facebook/bart-large-cnn", options: {use_cache: true}}'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#summarization-task",children:(0,i.jsx)(n.code,{children:"Summarization"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"min_length"})," is the minimum length in tokens of the output summary. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"max_length"})," is the maximum length in tokens of the output summary. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"top_k"})," defines the top tokens considered within the sample operation to create new text. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"top_p"})," is a float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top * p. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"temperature"})," is a float (ranging from ",(0,i.jsx)(n.em,{children:"0.0"})," to ",(0,i.jsx)(n.em,{children:"100.0"}),") temperature of the sampling operation. 1 means regular sampling, ",(0,i.jsx)(n.em,{children:"0"})," means always take the highest score, ",(0,i.jsx)(n.em,{children:"100.0"})," is getting closer to uniform probability. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"repetition_penalty"})," is a float (ranging from ",(0,i.jsx)(n.em,{children:"0.0"})," to ",(0,i.jsx)(n.em,{children:"100.0"}),") that controls where a token is used more within generation the more it is penalized to not be picked in successive generation passes. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"use_cache"})," is used to speed up requests by using the inference API cache."]}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",summarization:{model:"facebook/bart-large-cnn",parameters:{temperature:1}}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{summarization:{model:"facebook/bart-large-cnn",parameters:{temperature:1}}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "summarization": {"model": "facebook/bart-large-cnn", "parameters": {"temperature": 1}}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "summarization": {"model": "facebook/bart-large-cnn", "parameters": {"temperature": 1}}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"Translation",children:(0,i.jsx)(n.code,{children:"Translation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"model?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"options?:"})," {",(0,i.jsx)(n.code,{children:"use_cache?: boolean"}),"} ",(0,i.jsx)("br",{}),"\n}"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "Helsinki-NLP/opus-tatoeba-en-ja", options: {use_cache: true}}'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#translation-task",children:(0,i.jsx)(n.code,{children:"Translation"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"use_cache"})," is used to speed up requests by using the inference API cache."]}),"\n",(0,i.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",translation:{model:"Helsinki-NLP/opus-tatoeba-en-ja"}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{translation:{model:"Helsinki-NLP/opus-tatoeba-en-ja"}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "translation": {"model": "Helsinki-NLP/opus-tatoeba-en-ja"}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "translation": {"model": "Helsinki-NLP/opus-tatoeba-en-ja"}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"FillMask",children:(0,i.jsx)(n.code,{children:"FillMask"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"model?: string"}),", ",(0,i.jsx)("br",{}),"\n\xa0\xa0\xa0\xa0 ",(0,i.jsx)(n.code,{children:"options?:"})," {",(0,i.jsx)(n.code,{children:"use_cache?: boolean"}),"} ",(0,i.jsx)("br",{}),"\n}"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "bert-base-uncased", options: {use_cache: true}}'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#fill-mask-task",children:(0,i.jsx)(n.code,{children:"Fill Mask"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"use_cache"})," is used to speed up requests by using the inference API cache."]}),"\n",(0,i.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",fillMask:{model:"bert-base-uncased"}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{fillMask:{model:"bert-base-uncased"}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "fillMask": {"model": "bert-base-uncased"}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "fillMask": {"model": "bert-base-uncased"}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"QuestionAnswer",children:(0,i.jsx)(n.code,{children:"QuestionAnswer"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)(n.code,{children:"context: string"}),", ",(0,i.jsx)(n.code,{children:"model?: string"}),"}"]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "bert-large-uncased-whole-word-masking-finetuned-squad"}'})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#question-answering-task",children:(0,i.jsx)(n.code,{children:"Question Answer"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"context"})," is a string containing details that AI can use to answer the given questions. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h4,{id:"example-ask-about-labrador-looks",children:"Example (Ask about labrador looks)"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",questionAnswer:{model:"bert-large-uncased-whole-word-masking-finetuned-squad",context:"Labrador retrievers are easily recognized by their broad head, drop ears and large, expressive eyes. Two trademarks of the Lab are the thick but fairly short double coat, which is very water repellent, and the well known otter tail. The tail is thick and sturdy and comes off the topline almost straight."}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{questionAnswer:{model:"bert-large-uncased-whole-word-masking-finetuned-squad",context:"Labrador retrievers are easily recognized by their broad head, drop ears and large, expressive eyes. Two trademarks of the Lab are the thick but fairly short double coat, which is very water repellent, and the well known otter tail. The tail is thick and sturdy and comes off the topline almost straight."}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "questionAnswer": {\n        "model": "bert-large-uncased-whole-word-masking-finetuned-squad",\n        "context": "Labrador retrievers are easily recognized by their broad head, drop ears and large, expressive eyes. Two trademarks of the Lab are the thick but fairly short double coat, which is very water repellent, and the well known otter tail. The tail is thick and sturdy and comes off the topline almost straight."\n        }\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "questionAnswer": {\n        "model": "bert-large-uncased-whole-word-masking-finetuned-squad",\n        "context": "Labrador retrievers are easily recognized by their broad head, drop ears and large, expressive eyes. Two trademarks of the Lab are the thick but fairly short double coat, which is very water repellent, and the well known otter tail. The tail is thick and sturdy and comes off the topline almost straight."\n        }\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"AudioSpeechRecognition",children:(0,i.jsx)(n.code,{children:"AudioSpeechRecognition"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)(n.code,{children:"model?: string"}),"}"]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "facebook/wav2vec2-large-960h-lv60-self"}'})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#automatic-speech-recognition-task",children:(0,i.jsx)(n.code,{children:"Audio Speech Recognition"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",audioSpeechRecognition:{model:"facebook/wav2vec2-large-960h-lv60-self"}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{audioSpeechRecognition:{model:"facebook/wav2vec2-large-960h-lv60-self"}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "huggingFace": {"model": "facebook/wav2vec2-large-960h-lv60-self"}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "huggingFace": {"model": "facebook/wav2vec2-large-960h-lv60-self"}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"AudioClassification",children:(0,i.jsx)(n.code,{children:"AudioClassification"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)(n.code,{children:"model?: string"}),"}"]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition"}'})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#audio-classification-task",children:(0,i.jsx)(n.code,{children:"Audio Classification"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",audioClassification:{model:"ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition"}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{audioSpeechRecognition:{model:"ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition"}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "audioSpeechRecognition": {"model": "ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition"}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "audioSpeechRecognition": {"model": "ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition"}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{}),"\n",(0,i.jsx)(n.h3,{id:"ImageClassification",children:(0,i.jsx)(n.code,{children:"ImageClassification"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"true"})," | {",(0,i.jsx)(n.code,{children:"model?: string"}),"}"]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.em,{children:'{model: "google/vit-base-patch16-224"}'})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Connect to Hugging Face ",(0,i.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#image-classification-task",children:(0,i.jsx)(n.code,{children:"Image Classification"})})," API. ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"model"})," is the name of the model used for the task. ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{key:"placeholder key",imageClassification:{model:"google/vit-base-patch16-224"}}}})}),(0,i.jsx)(o.A,{children:(0,i.jsx)(c.A,{style:{borderRadius:"8px"},directConnection:{huggingFace:{imageClassification:{model:"google/vit-base-patch16-224"}}}})})]}),"\n",(0,i.jsxs)(x.A,{children:[(0,i.jsx)(u.A,{value:"js",label:"Sample code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "imageClassification": {"model": "google/vit-base-patch16-224"}\n    }\n  }\'\n></deep-chat>\n'})})}),(0,i.jsx)(u.A,{value:"py",label:"Full code",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "huggingFace": {\n      "key": "placeholder key",\n      "imageClassification": {"model": "google/vit-base-patch16-224"}\n    }\n  }\'\n  style="border-radius: 8px"\n></deep-chat>\n'})})})]}),"\n",(0,i.jsx)(d.A,{})]})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}},61886:(e,n,s)=>{function r(e){window.scrollY>0?e.style.boxShadow="0 1px 2px 0 rgb(0 0 0 / 10%)":e.style.boxShadow="unset"}function i(){setTimeout((()=>{window.removeEventListener("scroll",window.toggleNavOnScroll);const e=document.getElementsByClassName("navbar--fixed-top");if(e[0]){const n=e[0];r(n),window.toggleNavOnScroll=r.bind(this,n),window.addEventListener("scroll",window.toggleNavOnScroll)}}),2)}function a(){setTimeout((()=>{const e=document.querySelectorAll(".homepage > body > #__docusaurus > nav")?.[0];try{e.classList.add("fade-in")}catch(n){console.error(n),console.log("element was not rendered in time - use MutationObserver")}}),2)}s.r(n),s.d(n,{fadeIn:()=>a,readdAutoNavShadowToggle:()=>i})},82496:(e,n,s)=>{s.d(n,{A:()=>a});var r=s(96540),i=s(74848);function a({children:e}){const[n,s]=r.useState(!0);return(0,i.jsxs)("div",{children:[n&&e[0],!n&&e[1],(0,i.jsx)("div",{className:"component-key-toggle-button-container",children:(0,i.jsxs)("button",{className:"documentation-button component-key-toggle-button",onClick:()=>s(!n),children:[n&&"Insert test key",!n&&"Use placeholder key"]})})]})}}}]);